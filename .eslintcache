[{"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\index.js":"1","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\App.js":"2","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\reportWebVitals.js":"3","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movies.js":"4","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeMovieService.js":"5","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeGenreService.js":"6","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movie.js":"7","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Nav.js":"8","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\SideMenu.js":"9","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Genre.js":"10","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Pagination.js":"11"},{"size":478,"mtime":1611338950513,"results":"12","hashOfConfig":"13"},{"size":3437,"mtime":1612243395164,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":5228,"mtime":1612334635335,"results":"16","hashOfConfig":"13"},{"size":2462,"mtime":1611338070041,"results":"17","hashOfConfig":"13"},{"size":258,"mtime":1611338070064,"results":"18","hashOfConfig":"13"},{"size":1514,"mtime":1612334656031,"results":"19","hashOfConfig":"13"},{"size":351,"mtime":1611376965076,"results":"20","hashOfConfig":"13"},{"size":1679,"mtime":1612153131569,"results":"21","hashOfConfig":"13"},{"size":871,"mtime":1612333476369,"results":"22","hashOfConfig":"13"},{"size":1180,"mtime":1611719295457,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"71bqm9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\index.js",[],["53","54"],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\App.js",["55","56"],"import { getMovies } from \"./components/fakeMovieService\";\nimport SideMenu from \"./components/SideMenu\";\nimport Movies from \"./components/Movies\";\nimport { useState, useEffect } from \"react\";\nimport app from \"./styles/app.scss\";\n\nfunction App() {\n  const [itemPerPage, setItemPerPage] = useState(4); // For user to choose how many item per page to sort\n  // Function to get allMovies or genreMovies\n  const getMovieList = (movieList) => {\n    const results = [];\n    const ini = [...movieList];\n    while (ini.length) {\n      results.push(ini.splice(0, itemPerPage));\n    }\n    return results;\n  };\n\n  ///////////////////////////////////////////////////////\n  // ALL GENRES\n  const [allMovies, setAllMovies] = useState(getMovies()); // All-Movies\n  const [moviesOnPages, setMoviesOnPages] = useState(getMovieList(allMovies)); // divide All-Movies into separate pages (arrays)\n  const [filteredMovies, setFilteredMovies] = useState(moviesOnPages[0]); // first page (array) of the devided All-Movies\n\n  ///////////////////////////////////////////////////////\n  // EACH GENRES\n  const [genreStatus, setGenreStatus] = useState(false); // Status if Genre is selected or not\n  const [index, setIndex] = useState(0);\n  const [genreMovies, setGenreMovies] = useState([]); // G-Movies in a specific Genre\n  const [moviesOnPagesGenre, setMoviesOnPagesGenre] = useState(\n    // divide G-Movies into pages (arrays)\n    getMovieList(genreMovies)\n  );\n  const [filteredMoviesGenre, setFilteredMoviesGenre] = useState(\n    // first page of divided G-Movies\n    moviesOnPagesGenre[0]\n  );\n\n  ///////////////////////////////////////////////////////\n  // useEffect(() => {\n  //   const tempT = getMovieList(genreMovies);\n  //   setMoviesOnPagesGenre(tempT);\n  //   setFilteredMoviesGenre(tempT[0]);\n  //   console.log(genreMovies, moviesOnPagesGenre, filteredMoviesGenre);\n  // }, [genreMovies]);\n\n  useEffect(() => {\n    // const tempT = [...allMovies];\n    // setMoviesOnPages(getMovieList(tempT));\n    // setFilteredMovies(getMovieList(tempT)[0]);\n  }, [allMovies]);\n\n  return (\n    <div className=\"App\">\n      <SideMenu\n        allMovies={allMovies}\n        setFilteredMovies={setFilteredMovies}\n        filteredMovies={filteredMovies}\n        moviesOnPages={moviesOnPages}\n        setMoviesOnPages={setMoviesOnPages}\n        itemPerPage={itemPerPage}\n        filteredMoviesGenre={filteredMoviesGenre}\n        setFilteredMoviesGenre={setFilteredMoviesGenre}\n        moviesOnPagesGenre={moviesOnPagesGenre}\n        setMoviesOnPagesGenre={setMoviesOnPagesGenre}\n        genreMovies={genreMovies}\n        setGenreMovies={setGenreMovies}\n        setGenreStatus={setGenreStatus}\n        getMovieList={getMovieList}\n      />\n      <Movies\n        genreStatus={genreStatus}\n        allMovies={allMovies}\n        setAllMovies={setAllMovies}\n        filteredMovies={filteredMovies}\n        setFilteredMovies={setFilteredMovies}\n        itemPerPage={itemPerPage}\n        setMoviesOnPages={setMoviesOnPages}\n        moviesOnPages={moviesOnPages}\n        index={index}\n        setIndex={setIndex}\n        filteredMoviesGenre={filteredMoviesGenre}\n        moviesOnPagesGenre={moviesOnPagesGenre}\n        setMoviesOnPagesGenre={setMoviesOnPagesGenre}\n        setFilteredMoviesGenre={setFilteredMoviesGenre}\n        genreMovies={genreMovies}\n        setGenreMovies={setGenreMovies}\n        getMovieList={getMovieList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\reportWebVitals.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movies.js",["57"],"import { useEffect, useState } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport Nav from \"./Nav\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Movies = ({\r\n  allMovies,\r\n  setAllMovies,\r\n  filteredMovies,\r\n  setFilteredMovies,\r\n  arrayOfMoviePerPage,\r\n  setArrayOfMoviePerPage,\r\n  moviesOnPages,\r\n  setMoviesOnPages,\r\n  itemPerPage,\r\n  index,\r\n  setIndex,\r\n  genreMovies,\r\n  setGenreMovies,\r\n  genreStatus,\r\n  filteredMoviesGenre,\r\n  setFilteredMoviesGenre,\r\n  getMovieList,\r\n  moviesOnPagesGenre,\r\n  setMoviesOnPagesGenre,\r\n}) => {\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n  // Sorting\r\n  const [sortStatus, setSortStatus] = useState(false);\r\n  const tempAllMovies = [...allMovies];\r\n  const tempGenreMovies = [...genreMovies];\r\n\r\n  const sortMovies = (data, getValueByProp) => {\r\n    if (sortStatus !== true) {\r\n      data.sort((a, b) => {\r\n        const v1 = getValueByProp(a);\r\n        const v2 = getValueByProp(b);\r\n        return v1.toString().localeCompare(v2);\r\n      });\r\n    } else {\r\n      data.sort((a, b) => {\r\n        const v1 = getValueByProp(a);\r\n        const v2 = getValueByProp(b);\r\n        return v2.toString().localeCompare(v1);\r\n      });\r\n    }\r\n\r\n    if (!genreStatus) {\r\n      setMoviesOnPages(getMovieList(tempAllMovies));\r\n      setFilteredMovies(getMovieList(tempAllMovies)[0]);\r\n      setSortStatus(!sortStatus);\r\n    } else {\r\n      setMoviesOnPagesGenre(getMovieList(tempGenreMovies));\r\n      setFilteredMoviesGenre(getMovieList(tempGenreMovies)[0]);\r\n      setSortStatus(!sortStatus);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"movies\">\r\n        <Nav filteredMovies={filteredMovies} />\r\n        <table>\r\n          <tbody>\r\n            <tr className=\"table-head\">\r\n              <th\r\n                onClick={\r\n                  genreStatus\r\n                    ? () => sortMovies(tempGenreMovies, (item) => item.title)\r\n                    : () => sortMovies(tempAllMovies, (item) => item.title)\r\n                }\r\n              >\r\n                Title\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  genreStatus\r\n                    ? () =>\r\n                        sortMovies(tempGenreMovies, (item) => item.genre.name)\r\n                    : () => sortMovies(tempAllMovies, (item) => item.genre.name)\r\n                }\r\n              >\r\n                Genre\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  genreStatus\r\n                    ? () =>\r\n                        sortMovies(\r\n                          tempGenreMovies,\r\n                          (item) => item.numberInStock\r\n                        )\r\n                    : () =>\r\n                        sortMovies(tempAllMovies, (item) => item.numberInStock)\r\n                }\r\n              >\r\n                Stock\r\n              </th>\r\n              <th\r\n                onClick={\r\n                  genreStatus\r\n                    ? () =>\r\n                        sortMovies(\r\n                          tempGenreMovies,\r\n                          (item) => item.dailyRentalRate\r\n                        )\r\n                    : () =>\r\n                        sortMovies(\r\n                          tempAllMovies,\r\n                          (item) => item.dailyRentalRate\r\n                        )\r\n                }\r\n              >\r\n                Rate\r\n              </th>\r\n            </tr>\r\n            {genreStatus\r\n              ? filteredMoviesGenre.map((movie) => (\r\n                  <Movie\r\n                    key={movie._id}\r\n                    movie={movie}\r\n                    allMovies={allMovies}\r\n                    setAllMovies={setAllMovies}\r\n                    filteredMovies={filteredMovies}\r\n                    setFilteredMovies={setFilteredMovies}\r\n                    moviesOnPages={moviesOnPages}\r\n                    setMoviesOnPages={setMoviesOnPages}\r\n                    index={index}\r\n                    setIndex={setIndex}\r\n                    filteredMoviesGenre={filteredMoviesGenre}\r\n                  />\r\n                ))\r\n              : filteredMovies.map((movie) => (\r\n                  <Movie\r\n                    key={movie._id}\r\n                    movie={movie}\r\n                    allMovies={allMovies}\r\n                    setAllMovies={setAllMovies}\r\n                    filteredMovies={filteredMovies}\r\n                    setFilteredMovies={setFilteredMovies}\r\n                    moviesOnPages={moviesOnPages}\r\n                    setMoviesOnPages={setMoviesOnPages}\r\n                    index={index}\r\n                    setIndex={setIndex}\r\n                    filteredMoviesGenre={filteredMoviesGenre}\r\n                  />\r\n                ))}\r\n          </tbody>\r\n        </table>{\" \"}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <Pagination\r\n          genreStatus={genreStatus}\r\n          moviesOnPages={moviesOnPages}\r\n          filteredMovies={filteredMovies}\r\n          setFilteredMovies={setFilteredMovies}\r\n          moviesOnPagesGenre={moviesOnPagesGenre}\r\n          setFilteredMoviesGenre={setFilteredMoviesGenre}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeMovieService.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeGenreService.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movie.js",["58"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as emptyHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Movie = ({\r\n  setIndex,\r\n  movie,\r\n  allMovies,\r\n  setAllMovies,\r\n  filteredMovies,\r\n  setFilteredMovies,\r\n  moviesOnPages,\r\n  setMoviesOnPages,\r\n}) => {\r\n  const [heart, setHeart] = useState(false);\r\n\r\n  const movieHearted = () => {\r\n    setHeart(!heart);\r\n  };\r\n\r\n  const movieRemoved = () => {\r\n    setAllMovies(allMovies.filter((item) => item._id !== movie._id));\r\n    setFilteredMovies(filteredMovies.filter((item) => item._id !== movie._id));\r\n  };\r\n\r\n  // NEU SO PAGE = X THI KHI XOA CAI CUOI CUNG O PAGE X, PHAI TU DONG NHAY QUA PAGE X-1\r\n  return (\r\n    <tr>\r\n      <th className=\"movie-title column-1\">{movie.title}</th>\r\n      <th className=\"movie-gerne column-2\">{movie.genre.name}</th>\r\n      <th className=\"movie-stock column-3\">{movie.numberInStock}</th>\r\n      <th className=\"movie-rate column-4\">{movie.dailyRentalRate}</th>\r\n      <th className=\"movie-hearted column-5\">\r\n        {heart ? (\r\n          <FontAwesomeIcon onClick={movieHearted} icon={faHeart} />\r\n        ) : (\r\n          <FontAwesomeIcon onClick={movieHearted} icon={emptyHeart} />\r\n        )}\r\n      </th>\r\n      <th className=\"movie-removed column-6\">\r\n        <button onClick={movieRemoved}>Delete</button>\r\n      </th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Nav.js",[],["59","60"],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\SideMenu.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Genre.js",["61","62"],"import { useEffect, useState } from \"react\";\r\n\r\nconst Genre = ({\r\n  genreItem,\r\n  allMovies,\r\n  filteredMovies,\r\n  setFilteredMovies,\r\n  moviesOnPages,\r\n  setMoviesOnPages,\r\n  itemPerPage,\r\n  itemsInGerne,\r\n  setItemInGerne,\r\n  filteredMoviesGenre,\r\n  setFilteredMoviesGenre,\r\n  moviesOnPagesGenre,\r\n  setMoviesOnPagesGenre,\r\n  genreMovies,\r\n  setGenreMovies,\r\n  setGenreStatus,\r\n  getMovieList,\r\n}) => {\r\n  const genresFiltered = () => {\r\n    // Set depended state to be executed after the first\r\n    const temp1 = allMovies.filter(\r\n      (movie) => movie.genre._id === genreItem._id\r\n    );\r\n    setGenreMovies(temp1);\r\n    const temp2 = getMovieList(temp1);\r\n    setMoviesOnPagesGenre(temp2);\r\n    setFilteredMoviesGenre(temp2[0]);\r\n    setGenreStatus(true);\r\n  };\r\n\r\n  return <button onClick={genresFiltered}>{genreItem.name}</button>;\r\n};\r\n\r\nexport default Genre;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Pagination.js",["63","64"],"import { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = ({\r\n  moviesOnPages,\r\n  filteredMovies,\r\n  setFilteredMovies,\r\n  genreStatus,\r\n  moviesOnPagesGenre,\r\n  setFilteredMoviesGenre,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {genreStatus\r\n        ? moviesOnPagesGenre.map((page) => (\r\n            <button onClick={() => setFilteredMoviesGenre(page)}>\r\n              {moviesOnPagesGenre.indexOf(page) + 1}\r\n            </button>\r\n          ))\r\n        : moviesOnPages.map((page) => (\r\n            <button onClick={() => setFilteredMovies(page)}>\r\n              {moviesOnPages.indexOf(page) + 1}\r\n            </button>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n// {\r\n\r\n//   {moviesOnPagesGenre.map((page) =>\r\n//     <button onClick={() => setFilteredMoviesGenre(page)}>\r\n//       {moviesOnPagesGenre.indexOf(page) + 1}\r\n//     </button>}\r\n//     :\r\n//   {moviesOnPages.map((page) => (\r\n//     <span>\r\n//       {moviesOnPages.length === 1 ? (\r\n//         \"\"\r\n//       ) : (\r\n//         <button onClick={() => setFilteredMovies(page)}>\r\n//           {moviesOnPages.indexOf(page) + 1}\r\n//         </button>\r\n//       )}\r\n//     </span>\r\n//   ))}}\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":11},{"ruleId":"69","severity":1,"message":"73","line":8,"column":23,"nodeType":"71","messageId":"72","endLine":8,"endColumn":37},{"ruleId":"69","severity":1,"message":"74","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":19},{"ruleId":"69","severity":1,"message":"74","line":4,"column":20,"nodeType":"71","messageId":"72","endLine":4,"endColumn":29},{"ruleId":"65","replacedBy":"75"},{"ruleId":"67","replacedBy":"76"},{"ruleId":"69","severity":1,"message":"74","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":19},{"ruleId":"69","severity":1,"message":"77","line":1,"column":21,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"69","severity":1,"message":"77","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":18},{"ruleId":"69","severity":1,"message":"74","line":1,"column":20,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'setItemPerPage' is assigned a value but never used.","'useEffect' is defined but never used.",["78"],["79"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]