[{"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\index.js":"1","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\App.js":"2","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\reportWebVitals.js":"3","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeMovieService.js":"4","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeGenreService.js":"5","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movie.js":"6","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Nav.js":"7","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\SideMenu.js":"8","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Genre.js":"9","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Pagination.js":"10","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\configureStore.js":"11","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\rMovies.js":"12","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\reducer.js":"13","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\entities.js":"14","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\TopNav.js":"15","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Rentals.js":"16","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Customers.js":"17","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\rGenres.js":"18","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\rLogin.js":"19","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeUserDb.js":"20","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\helpers\\validationSchema.js":"21","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\InputForm.js":"22","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\LoginPage.js":"23","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\MovieNewPage.js":"24","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\MovieDetailPage.js":"25","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\NotFound.js":"26","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movies.js":"27"},{"size":724,"mtime":1612587056612,"results":"28","hashOfConfig":"29"},{"size":4253,"mtime":1614106200509,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":4257,"mtime":1612568980013,"results":"32","hashOfConfig":"29"},{"size":258,"mtime":1611338070064,"results":"33","hashOfConfig":"29"},{"size":3309,"mtime":1612656150508,"results":"34","hashOfConfig":"29"},{"size":1801,"mtime":1614106421909,"results":"35","hashOfConfig":"29"},{"size":1238,"mtime":1612573317352,"results":"36","hashOfConfig":"29"},{"size":751,"mtime":1614008906251,"results":"37","hashOfConfig":"29"},{"size":943,"mtime":1612586477123,"results":"38","hashOfConfig":"29"},{"size":184,"mtime":1612476985228,"results":"39","hashOfConfig":"29"},{"size":1431,"mtime":1614037699259,"results":"40","hashOfConfig":"29"},{"size":156,"mtime":1612464014131,"results":"41","hashOfConfig":"29"},{"size":277,"mtime":1612671484663,"results":"42","hashOfConfig":"29"},{"size":631,"mtime":1612669728519,"results":"43","hashOfConfig":"29"},{"size":84,"mtime":1612636396065,"results":"44","hashOfConfig":"29"},{"size":90,"mtime":1612636319526,"results":"45","hashOfConfig":"29"},{"size":280,"mtime":1612671127072,"results":"46","hashOfConfig":"29"},{"size":640,"mtime":1612844337070,"results":"47","hashOfConfig":"29"},{"size":161,"mtime":1612838770334,"results":"48","hashOfConfig":"29"},{"size":252,"mtime":1613189373818,"results":"49","hashOfConfig":"29"},{"size":1389,"mtime":1614020011448,"results":"50","hashOfConfig":"29"},{"size":2207,"mtime":1614019417866,"results":"51","hashOfConfig":"29"},{"size":4071,"mtime":1614098258494,"results":"52","hashOfConfig":"29"},{"size":4601,"mtime":1614058423579,"results":"53","hashOfConfig":"29"},{"size":93,"mtime":1614038156802,"results":"54","hashOfConfig":"29"},{"size":5667,"mtime":1614106224286,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"71bqm9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\index.js",[],["116","117"],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\App.js",["118","119","120","121"],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\reportWebVitals.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeMovieService.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeGenreService.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movie.js",["122"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as emptyHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { movieRemoved } from \"../store/rMovies\";\r\nimport store from \"../store/configureStore\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nconst Movie = ({\r\n  movie,\r\n  setFilteredMovies,\r\n  setMoviesOnPages,\r\n  setFilteredMoviesGenre,\r\n  setMoviesOnPagesGenre,\r\n  getMovieList,\r\n  genreType,\r\n  genreStatus,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) => {\r\n  const [heart, setHeart] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const movieHearted = () => {\r\n    setHeart(!heart);\r\n  };\r\n\r\n  const movieRemovedHandler = () => {\r\n    let currentMovieList = store.getState().entities.movies;\r\n    let currentMovieListGenre = currentMovieList.filter(\r\n      (movie) => movie.genre._id === genreType\r\n    );\r\n    dispatch(movieRemoved({ _id: movie._id }));\r\n    if (!genreStatus) {\r\n      if (getMovieList(currentMovieList)[currentPage].length === 1) {\r\n        currentMovieList = store.getState().entities.movies;\r\n        setMoviesOnPages(getMovieList(currentMovieList));\r\n        const tempPage = currentPage - 1;\r\n        setCurrentPage(tempPage);\r\n        setFilteredMovies(getMovieList(currentMovieList)[tempPage]);\r\n      } else {\r\n        currentMovieList = store.getState().entities.movies;\r\n        setMoviesOnPages(getMovieList(currentMovieList));\r\n        setFilteredMovies(getMovieList(currentMovieList)[currentPage]);\r\n      }\r\n    } else {\r\n      if (getMovieList(currentMovieListGenre)[currentPage].length === 1) {\r\n        currentMovieList = store.getState().entities.movies;\r\n        currentMovieListGenre = currentMovieList.filter(\r\n          (movie) => movie.genre._id === genreType\r\n        );\r\n        setMoviesOnPagesGenre(getMovieList(currentMovieListGenre));\r\n        const tempPage = currentPage - 1;\r\n        setCurrentPage(tempPage);\r\n        setFilteredMoviesGenre(getMovieList(currentMovieListGenre)[tempPage]);\r\n      } else {\r\n        currentMovieList = store.getState().entities.movies;\r\n        currentMovieListGenre = currentMovieList.filter(\r\n          (movie) => movie.genre._id === genreType\r\n        );\r\n        setMoviesOnPagesGenre(getMovieList(currentMovieListGenre));\r\n        setFilteredMoviesGenre(\r\n          getMovieList(currentMovieListGenre)[currentPage]\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <th className=\"movie-title column-1\">\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      </th>\r\n      <th className=\"movie-gerne column-2\">{movie.genre.name}</th>\r\n      <th className=\"movie-stock column-3\">{movie.numberInStock}</th>\r\n      <th className=\"movie-rate column-4\">{movie.dailyRentalRate}</th>\r\n      <th className=\"movie-hearted column-5\">\r\n        {heart ? (\r\n          <FontAwesomeIcon onClick={movieHearted} icon={faHeart} />\r\n        ) : (\r\n          <FontAwesomeIcon onClick={movieHearted} icon={emptyHeart} />\r\n        )}\r\n      </th>\r\n      <th className=\"movie-removed column-6\">\r\n        <button onClick={movieRemovedHandler}>Delete</button>\r\n      </th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Nav.js",["123"],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\SideMenu.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Genre.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Pagination.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\configureStore.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\rMovies.js",["124"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getMovies } from \"../components/fakeMovieService\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst slice = createSlice({\r\n  name: \"movies\",\r\n  initialState: getMovies(),\r\n  reducers: {\r\n    movieRemoved: (movies, action) => {\r\n      const index = movies.findIndex(\r\n        (movie) => movie._id === action.payload._id\r\n      );\r\n      movies.splice(index, 1);\r\n    },\r\n    movieAdded: (movies, action) => {\r\n      movies.push({\r\n        _id: uuidv4(),\r\n        title: action.payload.title,\r\n        genre: { _id: action.payload.genreId, name: action.payload.genreName },\r\n        numberInStock: action.payload.numberInStock,\r\n        dailyRentalRate: action.payload.dailyRentalRate,\r\n        // publishDate: action.payload.publishDate,\r\n      });\r\n    },\r\n    movieEdited: (movies, action) => {\r\n      const index = movies.findIndex(\r\n        (movie) => movie._id === action.payload._id\r\n      );\r\n      movies[index].title = action.payload.title;\r\n      movies[index].genre._id = action.payload.genreId;\r\n      movies[index].genre.name = action.payload.genreName;\r\n      movies[index].numberInStock = action.payload.numberInStock;\r\n      movies[index].dailyRentalRate = action.payload.dailyRentalRate;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { movieRemoved, movieAdded, movieEdited } = slice.actions;\r\nexport default slice.reducer;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\reducer.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\entities.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\TopNav.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Rentals.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Customers.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\rGenres.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\store\\rLogin.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\fakeUserDb.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\helpers\\validationSchema.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\InputForm.js",["125"],"const InputForm = ({\r\n  label,\r\n  onChange,\r\n  value,\r\n  name,\r\n  error,\r\n  errorType,\r\n  errorMessage,\r\n  type,\r\n  onBlur,\r\n  onBlurStatus,\r\n  errorStatus,\r\n  className,\r\n  dispatched,\r\n  saveClick,\r\n}) => {\r\n  return (\r\n    <div className=\"input-type\">\r\n      <label>{label}</label>\r\n      <div className=\"input-label\">\r\n        <input\r\n          className={\r\n            saveClick\r\n              ? errorStatus\r\n                ? error === undefined\r\n                  ? \"\"\r\n                  : error.details[0].path[0] === label\r\n                  ? \"error-active\"\r\n                  : \"\"\r\n                : \"\"\r\n              : \"\"\r\n          }\r\n          type={type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          type={type}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n        ></input>\r\n      </div>\r\n      <div className=\"display-error\">\r\n        {/* {errorStatus ? error === undefined ? \"\" : <h4>{error.message}</h4> : \"\"} */}\r\n        {saveClick ? (\r\n          errorStatus ? (\r\n            error === undefined ? (\r\n              \"\"\r\n            ) : error.details[0].path[0] === label ? (\r\n              <h4>{error.message}</h4>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\LoginPage.js",["126","127","128"],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InputForm from \"../components/InputForm\";\r\nimport { accountLogged } from \"../store/rLogin\";\r\nimport Joi, { validate } from \"joi-browser\";\r\n\r\nconst LoginForm = () => {\r\n  const [account, setAccount] = useState({ username: \"\", password: \"\" }); // either username or password\r\n  const [joiAlert, setJoiAlert] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const accountError = useSelector((state) => state.entities.login.account);\r\n\r\n  const Joi = require(\"joi\");\r\n  const schema = Joi.object({\r\n    username: Joi.string().alphanum().min(3).max(30).required(),\r\n    password: Joi.string(),\r\n  });\r\n\r\n  // validate = () => {\r\n  //   const result = Joi.validate(accountError, accountError.schema);\r\n  //   console.log(result);\r\n  // };\r\n\r\n  const usernameError = useSelector(\r\n    (state) => state.entities.login.errors.username\r\n  );\r\n  const passwordError = useSelector(\r\n    (state) => state.entities.login.errors.password\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(accountLogged({ account }));\r\n    setJoiAlert(schema.validate(account).error.message);\r\n    console.log(schema.validate(account).error.message);\r\n  };\r\n  const handleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    ///handling-multiple-inputs-with-single-onchange-handler-react\r\n    setAccount({ ...account, [e.target.name]: inputValue });\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputForm\r\n          label=\"Username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          value={account.username}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          error={usernameError}\r\n        />\r\n        <InputForm\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={account.password}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          error={passwordError}\r\n        />\r\n        <div> {usernameError || passwordError ? <h4>{joiAlert}</h4> : \"\"}</div>\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\MovieNewPage.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\MovieDetailPage.js",["129"],"import InputForm from \"../components/InputForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { movieEdited } from \"../store/rMovies\";\r\nimport { useState } from \"react\";\r\nimport { newMovieSchema } from \"../helpers/validationSchema\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst MovieDetails = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [errorStatus, setErrorStatus] = useState(false);\r\n  const [dispatched, setDispatched] = useState(false);\r\n  const [saveClick, setSaveClick] = useState(false);\r\n  const allMovies = useSelector((state) => state.entities.movies);\r\n  // take id from /:id on the link\r\n  const id = match.params.id;\r\n  let thisMovie = allMovies.filter((movie) => movie._id === id)[0];\r\n\r\n  if (thisMovie === undefined) {\r\n    thisMovie = {\r\n      title: \"\",\r\n      genre: { name: \"\" },\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    };\r\n    history.replace(\"/not-found\");\r\n  }\r\n  const [movieDetails, setMovieDetails] = useState({\r\n    title: thisMovie.title,\r\n    genre: thisMovie.genre.name,\r\n    numberInStock: thisMovie.numberInStock,\r\n    dailyRentalRate: thisMovie.dailyRentalRate,\r\n  });\r\n\r\n  const schemaValidate = newMovieSchema.validate({\r\n    Title: movieDetails.title,\r\n    \"Number in Stock\": movieDetails.numberInStock,\r\n    \"Daily Rental Rate\": movieDetails.dailyRentalRate,\r\n  });\r\n  const error = schemaValidate.error;\r\n\r\n  const handleNewMovie = (e) => {\r\n    e.preventDefault();\r\n    const genreName = document.getElementById(\"genres\").value;\r\n    const genreId = () => {\r\n      switch (genreName) {\r\n        case \"Action\":\r\n          return \"5b21ca3eeb7f6fbccd471818\";\r\n        case \"Comedy\":\r\n          return \"5b21ca3eeb7f6fbccd471814\";\r\n        case \"Thriller\":\r\n          return \"5b21ca3eeb7f6fbccd471820\";\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n    if (error === undefined) {\r\n      dispatch(\r\n        movieEdited({\r\n          _id: thisMovie._id,\r\n          title: movieDetails.title,\r\n          genreName,\r\n          genreId: genreId(),\r\n          numberInStock: Number(movieDetails.numberInStock),\r\n          dailyRentalRate: Number(movieDetails.dailyRentalRate),\r\n        })\r\n      );\r\n      setErrorStatus(false);\r\n      setDispatched(true);\r\n    } else {\r\n      setErrorStatus(true);\r\n      setDispatched(false);\r\n    }\r\n  };\r\n  const handleInput = (e) => {\r\n    setMovieDetails({ ...movieDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleOnBlur = () => {\r\n    setErrorStatus(true);\r\n  };\r\n  const handleGoBack = () => {\r\n    history.push(\"/\");\r\n    setSaveClick(false);\r\n  };\r\n  return (\r\n    <div className=\"new-movie\">\r\n      <h2>Movie Form</h2>\r\n      <form onSubmit={handleNewMovie}>\r\n        <InputForm\r\n          type=\"text\"\r\n          className=\"new-title\"\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          value={movieDetails.title}\r\n          onChange={handleInput}\r\n          onBlur={handleOnBlur}\r\n          error={error}\r\n          errorStatus={errorStatus}\r\n          dispatched={dispatched}\r\n          saveClick={saveClick}\r\n        />\r\n        <div className=\"dropdown-genres\">\r\n          <label>Genre</label>\r\n          <select id=\"genres\" name=\"genres\" value={movieDetails.genre.name}>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n          </select>\r\n        </div>\r\n        <InputForm\r\n          type=\"text\"\r\n          className=\"new-stock\"\r\n          label=\"Number in Stock\"\r\n          name=\"numberInStock\"\r\n          value={movieDetails.numberInStock}\r\n          onChange={handleInput}\r\n          onBlur={handleOnBlur}\r\n          error={error}\r\n          errorStatus={errorStatus}\r\n          dispatched={dispatched}\r\n          saveClick={saveClick}\r\n        />\r\n        <InputForm\r\n          type=\"text\"\r\n          className=\"new-rate\"\r\n          label=\"Daily Rental Rate\"\r\n          name=\"dailyRentalRate\"\r\n          value={movieDetails.dailyRentalRate}\r\n          onChange={handleInput}\r\n          onBlur={handleOnBlur}\r\n          error={error}\r\n          errorStatus={errorStatus}\r\n          dispatched={dispatched}\r\n          saveClick={saveClick}\r\n        />\r\n        <div>\r\n          <button onClick={() => setSaveClick(true)}>Save</button>\r\n          <button onClick={handleGoBack}> Go Back </button>\r\n        </div>\r\n        <div>\r\n          {dispatched ? <p>‎️‍🔥 \"{thisMovie.title}\" is updated</p> : \"\"}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\pages\\NotFound.js",[],"C:\\Users\\munic\\OneDrive\\Dokumente\\_moshReact\\components\\mosh-moviedb\\src\\components\\Movies.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":11},{"ruleId":"134","severity":1,"message":"138","line":18,"column":23,"nodeType":"136","messageId":"137","endLine":18,"endColumn":37},{"ruleId":"134","severity":1,"message":"139","line":39,"column":17,"nodeType":"136","messageId":"137","endLine":39,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":54,"column":6,"nodeType":"142","endLine":54,"endColumn":17,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":15},{"ruleId":"134","severity":1,"message":"145","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":18},{"ruleId":"134","severity":1,"message":"146","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":37,"column":11,"nodeType":"149","endLine":37,"endColumn":22},{"ruleId":"134","severity":1,"message":"150","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":11},{"ruleId":"134","severity":1,"message":"151","line":5,"column":15,"nodeType":"136","messageId":"137","endLine":5,"endColumn":23},{"ruleId":"134","severity":1,"message":"152","line":11,"column":9,"nodeType":"136","messageId":"137","endLine":11,"endColumn":21},{"ruleId":"134","severity":1,"message":"153","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":18},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'setItemPerPage' is assigned a value but never used.","'setIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'getMovieList'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredMovies' needs the current value of 'currentPage'.","ArrayExpression",["156"],"'Route' is defined but never used.","'useState' is defined but never used.","'act' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Joi' is defined but never used.","'validate' is defined but never used.","'accountError' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},"Update the dependencies array to be: [allMovies, currentPage, getMovieList]",{"range":"159","text":"160"},[2199,2210],"[allMovies, currentPage, getMovieList]"]